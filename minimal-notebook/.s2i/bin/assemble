#!/bin/bash

set -eo pipefail

# Ensure we are using the latest pip and wheel packages.

pip install -U pip setuptools wheel

# Install base packages needed for running Jupyter Notebooks. 

pip install -r /tmp/src/requirements.txt

# Activate JupyterHub extension for JupyterLab.

if [[ ! -z "${JUPYTER_INSTALL_LAB}" ]]; then
    jupyter labextension install @jupyterlab/hub-extension@^0.8.0
    npm cache clean
    rm -rf $HOME/.cache/yarn
fi

# Create default Jupyter notebook configuation.

mkdir -p /opt/app-root/configs

cp /tmp/src/jupyter_notebook_config.py /opt/app-root/configs/

# This S2I assemble script is only used when creating the custom image.
# For when running the image, or using it as a S2I builder, we use a second
# set of custom S2I scripts. We now need to move these into the correct
# location and have the custom image use those by dropping in an image
# metadata file which overrides the labels of the base image.

mkdir -p /tmp/.s2i

mv /tmp/src/builder/image_metadata.json /tmp/.s2i/image_metadata.json

mv /tmp/src/builder /opt/app-root/builder

mv /tmp/src/*.sh /opt/app-root/bin

rm -rf /tmp/src

# Ensure passwd/group file intercept happens for any shell environment.

echo "source /opt/app-root/etc/generate_container_user" >> /opt/app-root/etc/scl_enable

# Create additional directories.

echo " -----> Creating additional directories."

mkdir -p /opt/app-root/data

# Fixup permissions on directories and files.

fix-permissions /opt/app-root
